# ============================================
# üîê ENVIRONMENT VARIABLES TEMPLATE
# ============================================
# ‚ö†Ô∏è IMPORTANT: When cloning this boilerplate for a new project:
#   1. Copy this file: cp .env.example .env.local
#   2. Replace ALL placeholder values with your actual credentials
#   3. NEVER commit .env.local to git (it's in .gitignore)
#   4. Create NEW credentials for each project (don't reuse!)
# ============================================

# ============================================
# üìä DATABASE CONNECTION (REQUIRED)
# ============================================
# ‚ö†Ô∏è CRITICAL: Create a NEW database for each project!
#
# Steps to setup:
# 1. Go to https://neon.tech (or your PostgreSQL provider)
# 2. Create a new database (e.g., "my-project-dev" or "my-project-prod")
# 3. Copy the connection strings provided
# 4. Replace the placeholders below
#
# Format: postgresql://USERNAME:PASSWORD@HOST:PORT/DATABASE?params
# ============================================

POSTGRES_PRISMA_URL="postgresql://user:password@host.region.provider.neon.tech/dbname?connect_timeout=15&sslmode=require"
POSTGRES_URL_NON_POOLING="postgresql://user:password@host.region.provider.neon.tech/dbname?sslmode=require"
DATABASE_URL="postgresql://user:password@host.region.provider.neon.tech/dbname?sslmode=require"
POSTGRES_URL="postgresql://user:password@host.region.provider.neon.tech/dbname?sslmode=require"

# ============================================
# üîê AUTHENTICATION - Clerk (REQUIRED)
# ============================================
# Steps to setup:
# 1. Go to https://clerk.com and create account
# 2. Click "Add application" and name it after your project
# 3. Copy the API keys from the dashboard
# 4. For development: Use TEST keys (pk_test_..., sk_test_...)
# 5. For production: Use LIVE keys (pk_live_..., sk_live_...)
#
# ‚ö†Ô∏è IMPORTANT: Create a NEW Clerk app for each project!
# ============================================

NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="pk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
CLERK_SECRET_KEY="sk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

# Clerk redirect URLs (can usually keep these as-is)
NEXT_PUBLIC_CLERK_SIGN_IN_URL="/login"
NEXT_PUBLIC_CLERK_SIGN_UP_URL="/register"
NEXT_PUBLIC_CLERK_AFTER_FALLBACK_REDIRECT_URL="/"

# ============================================
# üí≥ PAYMENTS - Stripe (REQUIRED)
# ============================================
# Steps to setup:
# 1. Go to https://stripe.com and create account
# 2. Switch to TEST mode (toggle in top right of dashboard)
# 3. Go to Developers ‚Üí API Keys
# 4. Copy the Publishable key (pk_test_...)
# 5. Copy the Secret key (sk_test_...)
# 6. For production: Switch to LIVE mode and use live keys
#
# ‚ö†Ô∏è IMPORTANT: Use TEST keys for development!
# ============================================

NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
STRIPE_SECRET_KEY="sk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

# ============================================
# üì¶ STORAGE - Google Cloud Storage (OPTIONAL)
# ============================================
# Required only if your app needs file uploads (images, documents, etc.)
#
# Steps to setup:
# 1. Go to https://console.cloud.google.com
# 2. Create a new project (or use existing)
# 3. Enable Cloud Storage API
# 4. Create a new storage bucket (e.g., "my-project-files")
# 5. Create a service account:
#    - Go to IAM & Admin ‚Üí Service Accounts
#    - Create service account with "Storage Admin" role
#    - Create and download JSON key
# 6. Base64 encode the JSON key:
#    Linux/Mac: cat service-account.json | base64 -w 0
#    Windows: [Convert]::ToBase64String([System.IO.File]::ReadAllBytes("service-account.json"))
# 7. Paste the base64 string below
#
# ‚ö†Ô∏è NOTE: If not using file uploads, you can skip this initially
# ============================================

GCLOUD_SERVICE_ACCOUNT_JSON="BASE64_ENCODED_JSON_KEY_HERE"

# ============================================
# üìß EMAIL - Resend (OPTIONAL)
# ============================================
# Required only if your app sends emails (order confirmations, etc.)
#
# Steps to setup:
# 1. Go to https://resend.com and create account
# 2. Create a new API key
# 3. For production: Verify your domain
#
# ‚ö†Ô∏è NOTE: If not sending emails yet, you can skip this initially
# ============================================

RESEND_API_KEY="re_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

# ============================================
# ü§ñ AI - OpenAI (OPTIONAL)
# ============================================
# Required only if your app uses AI features
#
# Steps to setup:
# 1. Go to https://platform.openai.com
# 2. Create API key
# 3. Add billing information
#
# ‚ö†Ô∏è NOTE: Uncomment only if you need AI features
# ============================================

# OPENAI_API_KEY="sk-proj-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

# ============================================
# üåê APP CONFIGURATION (REQUIRED)
# ============================================
# Update these for your project
# ============================================

# Development
NEXT_PUBLIC_DOMAIN="http://localhost:3000"
NEXT_PUBLIC_API_DOMAIN="http://localhost:3000/api/trpc"
NODE_ENV="development"

# For production deployment, change to:
# NEXT_PUBLIC_DOMAIN="https://your-domain.com"
# NEXT_PUBLIC_API_DOMAIN="https://your-domain.com/api/trpc"
# NODE_ENV="production"

# Newsletter popup (optional)
NEXT_PUBLIC_NEWSLETTER_ALWAYS_SHOW="0"  # Set to "1" to always show newsletter popup

# ============================================
# üìã CHECKLIST: What to Change When Cloning
# ============================================
#
# REQUIRED (Must change):
# ‚úÖ All 4 database URLs (create NEW database)
# ‚úÖ Clerk publishable key (create NEW Clerk app)
# ‚úÖ Clerk secret key
# ‚úÖ Stripe publishable key (use test mode)
# ‚úÖ Stripe secret key (use test mode)
# ‚úÖ Domain URLs (for production)
#
# OPTIONAL (Change if needed):
# ‚ö™ Google Cloud Storage JSON (if using file uploads)
# ‚ö™ Resend API key (if sending emails)
# ‚ö™ OpenAI API key (if using AI features)
#
# ============================================
# üöÄ Quick Setup Guide
# ============================================
#
# 1. Copy this file:
#    cp .env.example .env.local
#
# 2. Fill in all REQUIRED variables above
#
# 3. Install dependencies:
#    npm install
#
# 4. Run database migrations:
#    npx prisma migrate dev
#    npx prisma generate
#
# 5. Start development server:
#    npm run dev
#
# 6. Visit http://localhost:3000
#
# ============================================
# üÜò Troubleshooting
# ============================================
#
# "Cannot find module '@prisma/client'":
#   ‚Üí Run: npx prisma generate
#
# Database connection errors:
#   ‚Üí Check connection strings are correct
#   ‚Üí Ensure database exists and is accessible
#   ‚Üí Try testing connection with: npx prisma db pull
#
# Clerk authentication not working:
#   ‚Üí Ensure you created a NEW Clerk application
#   ‚Üí Check you're using the correct keys (test vs live)
#   ‚Üí Verify redirect URLs in Clerk dashboard
#
# Stripe payments not working:
#   ‚Üí Ensure you're using TEST mode keys
#   ‚Üí Check Stripe dashboard for webhook configuration
#
# ============================================
# üìö Additional Resources
# ============================================
#
# Full documentation: ./docs/README.md
# Cloning guide: ./docs/CLONING_GUIDE.md
# Configuration guide: ./docs/CONFIGURATION.md
#
# ============================================
